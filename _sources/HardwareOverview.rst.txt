Hardware overview
==================

A quad-rotor UAV is an under-actuated robotic platform that consists of 4 propellers driven independently, with each motor being mechanically coupled in the rotational axis to a BLDC (Brushless DC) motor. The motors are 3-phase motors and have a very high power-to-weight ratio and energy efficiency; these properties are ideal on an airborne platform where one is optimizing the flight time (i.e. endurance) and payload capacity. The control of these motors is performed by hardware known as an ESC (Electronic Speed Controller) which is used commonly by R/C (radio control) hobbyists as well. The ESC takes motor speed (RPM) commands from the flight computer and converts them accordingly into power outputs on 3 phases which then drive the windings of the BLDC motor. In the case of the ESCs on this vehicle, the ESC accepts PWM commands from the flight control system, where the desired RPM is expressed as the PWM duty cycle. A variety of industry and academic research has gone into BLDC control, and means that high-quality ESCs are available off-the-shelf that meet the control bandwidth requirements for a quad-rotor platform. Because of this, several ESCs were tried before the decision was made to use Hobbyking's "Afro/SimonK" series of ESCs with firmware tuned specifically for multirotor applications. These ESCs also sport substantially higher update rates, allowing for faster control and improvements in control system performance.

The next major piece of hardware that must be considered is the flight computer (or possibly in the plural). In the case of the quadcopter developed here, a multi-brain flight computer architecture has been developed to address the research objectives (namely, image processing, high-level path-planning and ease of debug and telemetry forwarding.) In keeping with these goals, the vehicle actually has two flight computers that shall be referred to as the PFC and SFC (Primary and Secondary Flight Computers respectively.) The PFC has the role of performing "hard" real-time sensor data acquisition, command processing, state estimation and inner-loop stabilization of the vehicle. It consists of a set of real-time microcontrollers connected to a variety of sensors on a PCB. The sensors include IMU (inertial Measurement Unit), pressure sensor (for altitude/airspeed sensing), ADC (Analog-Digital converters), DAC (Digital-Analog Converters), etc. In addition to the sensor package included on the PFC's circuit board, it also interfaces to other sensors through a set of wiring harnesses. These include a ToF (Time-Of-Flight) LIDAR (Light-ranging sensor) altimeter, auxiliary IMU/heading sensor and a Px4Flow Optical Flow sensor that provides an estimate of lateral velocity over the ground. In general, this means that task intervals on the flight software on the PFC can range from hundreds of micro-seconds to a few milliseconds, with maximum allowable and observed latency bounds on the order of tens of microseconds. Additionally, the PFC directly receives user flight commands through an analog PWM (pulse-width mudulation) interface for human-in-the-loop flight modes where the user can directly command vehicle movement characteristics such as velocity, attitude or attitude rate, and also can switch to a completely fail-safe mode that eliminates software considered to be potentially unstable, and instead run software that is "known good" and has substantial confidence testing and flight heritage. Additionally, in this mode no inputs are accepted from the communication interface to the SFC, thus eliminating any potential for propagation of SFC software/hardware faults into the PFC's ability to control the vehicle in a safe manner.

The SFC is a commercially-available off-the-shelf Linux single board computer (SBC) and serves several purposes. As a system running Linux, it provides a variety of open-source debugging and software development capabilities that would be difficult if not impossible to implement on the PFC, given its "bare-metal" nature. Even if a real-time operating system is utilized on the PFC, the limited resources make it difficult to implement a lot of the facilities available readily within a Linux enviornment. The SFC is a very powerful hardware platform, and in the case of this vehicle is an Odroid XU4 board. It contains a Samsung Exynos SoC (System-on-chip) with an ARM Cortex-A15 and A7 hybrid core running at up to 2 GHz. It has 2 GB RAM, USB, Gigabit Ethernet and HDMI, allowing for a large variety of interface options and peripheral attachment. It also provides an ideal platform to perform computer vision tasks, due to the processing power and USB interface which makes it possible to connect any off-the-shelf webcam. Additionally, the availability of USB and Ethernet means that various network interfaces ranging from switches to WiFi and 4G modules can be employed to provide almost unlimited-range debugging, telemetry and command and control tasks. In conjunction with a ground station application running on a user PC/laptop, it is possible to view real-time data streams, uplink commands and movement waypoints, and view video streams. The entire data stream from the vehicle is also downlinked and recorded, allowing for post-flight analysis and fault identification in the event of an anomaly, even if the on-board avionics are severely damaged or otherwise unavailable.

Sensor Overview
---------------

As mentioned in prior sections, a quad-rotor UAV is an inherently unstable vehicle. Without active stabilization, it is impossible for a typical human pilot to manually fly the vehicle in the usual sense of the word (i.e. directly commanding the speeds of the 4 motors). Even if such a feat were possible, it would lead to reduced utility of such a vehicle in unstructured environments where higher levels of autonomy are desired. Thus, a suite of sensors is necessary to carry out active control of the vehicle and perceive and sense the vehicle's state with respect to its environment. The primary sensor suite is the following:

- IMU
   - 3-axis accelerometer
   - 3-axis gyroscope
   - 3-axis magnetometer
- Optical flow sensor
- LIDAR Altimeter (rangefinder)
- GPS module
- 2D scanning LIDAR

IMU
^^^^^^^^^^^^^^^^

An Invensense MPU-9250 is used as the IMU (Inertial Measurement Unit). It combines a 3-axis gyroscope, accelerometer and magnetometer into an extremely small PCB-mounted package, and also includes internal 16-bit ADCs and analog frontends to perform the necessary downsampling, and signal conditioning.

LIDAR Altimeter
^^^^^^^^^^^^^^^

The LIDAR Altimeter is a sensor to measure the vehicle's height above ground level (AGL). The specific part chosen for the vehicle is a  `LIDAR Lite <http://https://www.sparkfun.com/products/14032/>`_. It is a **TOF** (Time of Flight) sensor, which means that it infers range to the target surface/obstacle by emitting a coded pulse and measuring the round-trip time for the pulse to be reflected back. The rangefinder operates on infrared wavelengths, and includes internal microprocessor and FPGA-driven logic to perform the necessary tracking and correlation loop implementation, and deliver downsampled, filtered data over a variety of standard digital and analog interfces to the processing platform.